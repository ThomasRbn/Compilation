.data
crlf: .asciiz "\n"

.text
main:
	move $s7, $sp
	add $sp, $sp, -12
# Affectation de (1 + 2) à i
	# Somme
 	# Evaluation de l'opérande gauche
	li $v0, 1

	# Empilement de l'opérande gauche
	sw $v0, 0($sp)
	addi $sp, $sp, -4

	# Evaluation de l'opérande droite
	li $v0, 2

	# Dépilement de l'opérande gauche
	addi $sp, $sp, 4
	lw $v1, 0($sp)

	# Addition
	add $v0, $v1, $v0
	sw $v0, 0($s7)

# Ecrire i
	# Accès à la variable i
	lw $v0, 0($s7)
	move $a0, $v0
	li $v0, 1
	syscall
	# Saut de ligne
	la $a0, crlf
	li $v0, 4
	syscall

# Affectation de (i + 3) à j
	# Somme
 	# Evaluation de l'opérande gauche
	# Accès à la variable i
	lw $v0, 0($s7)

	# Empilement de l'opérande gauche
	sw $v0, 0($sp)
	addi $sp, $sp, -4

	# Evaluation de l'opérande droite
	li $v0, 3

	# Dépilement de l'opérande gauche
	addi $sp, $sp, 4
	lw $v1, 0($sp)

	# Addition
	add $v0, $v1, $v0
	sw $v0, -4($s7)

# Ecrire j
	# Accès à la variable j
	lw $v0, -4($s7)
	move $a0, $v0
	li $v0, 1
	syscall
	# Saut de ligne
	la $a0, crlf
	li $v0, 4
	syscall

end:
	li $v0, 10
	syscall
