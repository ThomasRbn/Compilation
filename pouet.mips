.data
crlf: .asciiz "\n"

.text
main:
	move $s7, $sp
	add $sp, $sp, -0

	# Ecrire 0 && 0
	# ET
	# Evaluation de l'opérande gauche
	li $v0, 0

	# Empilement de l'opérande gauche
	sw $v0, 0($sp)
	addi $sp, $sp, -4

	# Evaluation de l'opérande droite
	li $v0, 0

	# Dépilement de l'opérande gauche
	addi $sp, $sp, 4
	lw $v1, 0($sp)

	# ET
	and $v0, $v1, $v0
	move $a0, $v0
	li $v0, 1
	syscall

	# Saut de ligne
	la $a0, crlf
	li $v0, 4
	syscall

	# Ecrire 0 && 1
	# ET
	# Evaluation de l'opérande gauche
	li $v0, 0

	# Empilement de l'opérande gauche
	sw $v0, 0($sp)
	addi $sp, $sp, -4

	# Evaluation de l'opérande droite
	li $v0, 1

	# Dépilement de l'opérande gauche
	addi $sp, $sp, 4
	lw $v1, 0($sp)

	# ET
	and $v0, $v1, $v0
	move $a0, $v0
	li $v0, 1
	syscall

	# Saut de ligne
	la $a0, crlf
	li $v0, 4
	syscall

	# Ecrire 1 && 0
	# ET
	# Evaluation de l'opérande gauche
	li $v0, 1

	# Empilement de l'opérande gauche
	sw $v0, 0($sp)
	addi $sp, $sp, -4

	# Evaluation de l'opérande droite
	li $v0, 0

	# Dépilement de l'opérande gauche
	addi $sp, $sp, 4
	lw $v1, 0($sp)

	# ET
	and $v0, $v1, $v0
	move $a0, $v0
	li $v0, 1
	syscall

	# Saut de ligne
	la $a0, crlf
	li $v0, 4
	syscall

	# Ecrire 1 && 1
	# ET
	# Evaluation de l'opérande gauche
	li $v0, 1

	# Empilement de l'opérande gauche
	sw $v0, 0($sp)
	addi $sp, $sp, -4

	# Evaluation de l'opérande droite
	li $v0, 1

	# Dépilement de l'opérande gauche
	addi $sp, $sp, 4
	lw $v1, 0($sp)

	# ET
	and $v0, $v1, $v0
	move $a0, $v0
	li $v0, 1
	syscall

	# Saut de ligne
	la $a0, crlf
	li $v0, 4
	syscall

end:
	li $v0, 10
	syscall
